<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <generator uri="https://blog.rust-lang.org/inside-rust/" version="0.1.0">Inside Rust Blog</generator>
    <link href="https://blog.rust-lang.org/inside-rust/feed.xml" rel="self" type="application/atom+xml" />
    <link href="https://blog.rust-lang.org/inside-rust/" rel="alternate" type="text/html" />
    <id>https://blog.rust-lang.org/inside-rust/</id>
    <title>Inside Rust Blog</title>
    <subtitle>Want to follow along with Rust development? Curious how you might get involved? Take a look!</subtitle>
    <author>
        <name>Maintained by the Rust Teams.</name>
        <uri>https://github.com/rust-lang/blog.rust-lang.org/</uri>
    </author>
    <updated>2019-11-06T08:33:50Z</updated>

    
    <entry>
        <title>2019-11-05 Infrastructure Team Meeting</title>
        <link rel="alternate" href="https://blog.rust-lang.org/inside-rust/2019/11/06/infra-team-meeting.html" type="text/html" title="2019-11-05 Infrastructure Team Meeting" />
        <published>2019-11-06T00:00:00Z</published>
        <updated>2019-11-06T00:00:00Z</updated>
        <id>https://blog.rust-lang.org/inside-rust/2019/11/06/infra-team-meeting.html</id>
        <content type="html" xml:base="https://blog.rust-lang.org/inside-rust/2019/11/06/infra-team-meeting.html">&lt;p&gt;Meeting run by shepmaster. Minutes written by pietroalbini.&lt;br /&gt;
Attending: aidanhs, alexcrichton, kennytm, Mark-Simulacrum, pietroalbini, shepmaster&lt;br /&gt;
&lt;a href=&quot;https://discordapp.com/channels/442252698964721669/443148319431065610/641335927721033732&quot;&gt;Start of the conversation&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;#removing-msys2-ca-certificates-workaround-p-high-issue)&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;removing-msys2-ca-certificates-workaround-p-high-issue)&quot;&gt;&lt;/a&gt;Removing MSYS2 ca-certificates workaround (P-high issue)&lt;/h2&gt;
&lt;p&gt;A few weeks ago our CI broke due to a broken &lt;code&gt;ca-certificates&lt;/code&gt; MSYS2 package,
which caused all Windows builders to fail. The temporary patch was to install a
vendored copy of that package, and since it’s not needed anymore pietroalbini
landed a PR this week removing the hack from our CI configuration.&lt;/p&gt;
&lt;p&gt;The other part of the issue is figuring out whether to vendor MSYS2 and MinGW
as a whole, but there is the issue of keeping the mirrors sort of up to date,
and we don’t have a clear idea on how to fix that at the moment. We decided to
downgrade the issue to P-medium and to talk about mirroring and vendoring at
the All Hands 2020. In preparation of that meeting it will be useful to audit
what we mirror at the moment and how old that is, but it’s not urgent and
nobody has the time to work on it right now.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;#figuring-out-data-retention-on-azure-pipelines-p-medium-issue)&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;figuring-out-data-retention-on-azure-pipelines-p-medium-issue)&quot;&gt;&lt;/a&gt;Figuring out data retention on Azure Pipelines (P-medium issue)&lt;/h2&gt;
&lt;p&gt;This is not yet an issue, as the current retention is configured to 2 years.
We’re waiting on some talks with Microsoft to settle before starting to poke
people about this again.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;#re-enable-llvmdebug-assertions-on-slow-builders-(p-medium-issue)&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;re-enable-llvmdebug-assertions-on-slow-builders-(p-medium-issue)&quot;&gt;&lt;/a&gt;Re-enable LLVM/debug assertions on slow builders (P-medium issue)&lt;/h2&gt;
&lt;p&gt;We still don’t have the time budget to enable them back, but increasing the
core count should allow us to do that.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;#new-server-for-perf&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;new-server-for-perf&quot;&gt;&lt;/a&gt;New server for perf&lt;/h2&gt;
&lt;p&gt;alexcrichton ordered an
&lt;a href=&quot;https://www.hetzner.com/dedicated-rootserver/ax41-nvme&quot;&gt;AX41-NVMe&lt;/a&gt; bare metal
server from Hetzner as a replacement benchmarking machine for perf, paid by
Mozilla. We’re waiting on Hetzner to give us access to it before simulacrum can
try it out and configure it. If we don’t get access in a few days alexcrichton
is going to ping them.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;#lifecycle-policy-for-staticrust-lang.org&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;lifecycle-policy-for-staticrust-lang.org&quot;&gt;&lt;/a&gt;Lifecycle policy for static.rust-lang.org&lt;/h2&gt;
&lt;p&gt;static.rust-lang.org is backed by a S3 bucket, and since 2016 versioning is
enabled on the bucket to prevent issues with accidental file deletions. Some of
the files in that bucket are overridden each day though (for example nightly
compilers), keeping a bunch of past versions stored. Those past versions are
useless as there isn’t an easy way to get them from the CDN, and the files are
also stored separately in other places on that bucket. Everyone agreed we
should enable lifecycle policy to delete those useless files, and we reached a
consensus on deleting them after three months. This won’t be noticeable by end
users, installing old nightlies by date will still work.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;#what-to-do-with-the-rust-lang-ci-s3-bucket&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;what-to-do-with-the-rust-lang-ci-s3-bucket&quot;&gt;&lt;/a&gt;What to do with the rust-lang-ci S3 bucket&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;rust-lang-ci&lt;/code&gt; is a really old and currently unused S3 bucket which was used to
store CI artifacts before we migrated them to &lt;code&gt;rust-lang-ci2&lt;/code&gt;. There are still
some files in there, so we enabled bucket logging for a month to see how
frequent files there were accessed.&lt;/p&gt;
&lt;p&gt;Turns out, we had a total of 86 successful requests in a month, split between:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;69 requests were accessing cargo builds of 1.14.0&lt;/li&gt;
&lt;li&gt;17 requests were accessing old CI mirrors&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Due to the low traffic we decided to remove those old CI mirrors, but for the
cargo builds the question is more complicated. Due to a bug in the manifest
generation back then, installing Rust 1.14.0 from rustup actually downloads
Cargo from the bucket instead of the CDN, and removing those files would
permanently break installing Rust 1.14.0. There was disagreement on whether to
do that inside the team, and we reached the decision to wait until pietroalbini
investigates whether redirects are feasible to configure in S3.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;#early-feedback-on-pietroalbinis-wip-ci-generate-branch&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;early-feedback-on-pietroalbinis-wip-ci-generate-branch&quot;&gt;&lt;/a&gt;Early feedback on pietroalbini’s WIP ci-generate branch&lt;/h2&gt;
&lt;p&gt;pietroalbini is working on a branch that implements a generator for our CI
configuration, from a simplified custom DSL
(&lt;a href=&quot;https://github.com/pietroalbini/rust/tree/ci-generate&quot;&gt;branch&lt;/a&gt; -
&lt;a href=&quot;https://github.com/pietroalbini/rust/tree/ci-generate/src/tools/generate-ci-config&quot;&gt;documentation&lt;/a&gt;).
While the generator has a number of small benefits for us, the main driver
between the creation of the branch is to work around some limitations in GitHub
Actions’s configuration syntax, namely the lack of importable templates. There
wasn’t time to properly discuss this so we deferred to next week.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;#revisiting-meeting-run-rotation&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;revisiting-meeting-run-rotation&quot;&gt;&lt;/a&gt;Revisiting meeting run rotation&lt;/h2&gt;
&lt;p&gt;A month ago we started rotating who runs the meetings, intending to revisit the
decision today. The team felt either neutral or positive about the idea, so
we’ll keep doing that for a while. aidanhs is going to run the next meeting.&lt;/p&gt;
</content>

        <author>
            <name>Pietro Albini</name>
        </author>
    </entry>
    
    <entry>
        <title>Clippy is removing its plugin interface</title>
        <link rel="alternate" href="https://blog.rust-lang.org/inside-rust/2019/11/04/Clippy-removes-plugin-interface.html" type="text/html" title="Clippy is removing its plugin interface" />
        <published>2019-11-04T00:00:00Z</published>
        <updated>2019-11-04T00:00:00Z</updated>
        <id>https://blog.rust-lang.org/inside-rust/2019/11/04/Clippy-removes-plugin-interface.html</id>
        <content type="html" xml:base="https://blog.rust-lang.org/inside-rust/2019/11/04/Clippy-removes-plugin-interface.html">&lt;p&gt;Today, we're announcing that Clippy will completely remove its plugin interface.
Using the plugin interface has been deprecated for about one and a half year now
(&lt;a href=&quot;https://github.com/rust-lang/rust-clippy/pull/2712&quot;&gt;rust-lang/rust-clippy#2712&lt;/a&gt;). Since then, an unsilenceable warning has been
emitted. Now that compiler plugins are officially deprecated
(&lt;a href=&quot;https://github.com/rust-lang/rust/pull/64675&quot;&gt;rust-lang/rust#64675&lt;/a&gt;), Clippy will remove its support for the plugin
interface completely (&lt;a href=&quot;https://github.com/rust-lang/rust-clippy/pull/4714&quot;&gt;rust-lang/rust-clippy#4714&lt;/a&gt;). This change will hit stable
with version 1.41.0.&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;#does-this-post-affect-me&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;does-this-post-affect-me&quot;&gt;&lt;/a&gt;Does this post affect me?&lt;/h3&gt;
&lt;p&gt;Most likely, no. This post only affects you, if you're still using Clippy
through its plugin interface. If you do so, you get the warning&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;warning: the clippy plugin is being deprecated, please use cargo clippy or rls with the clippy feature
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;when compiling your crate. If you don't see this warning, nothing will change
for you.&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;#how-do-i-migrate-from-the-plugin-interface&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;how-do-i-migrate-from-the-plugin-interface&quot;&gt;&lt;/a&gt;How do I migrate from the plugin interface?&lt;/h3&gt;
&lt;p&gt;If you are still using the Clippy plugin interface, here are some steps you can
take to migrate to &lt;code&gt;cargo clippy&lt;/code&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Cargo.toml&lt;/code&gt;: Remove every occurrence of the &lt;code&gt;clippy&lt;/code&gt; dependency and the
&lt;code&gt;clippy&lt;/code&gt; feature.&lt;/li&gt;
&lt;li&gt;Completely remove every occurrence of &lt;code&gt;feature(plugin)&lt;/code&gt; and &lt;code&gt;plugin(clippy)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Replace every occurrence of &lt;code&gt;feature = &amp;quot;clippy&amp;quot;&lt;/code&gt; with &lt;code&gt;feature = &amp;quot;cargo-clippy&amp;quot;&lt;/code&gt;. The &lt;code&gt;cargo-clippy&lt;/code&gt; feature is automatically enabled when
running &lt;code&gt;cargo clippy&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;CI: You now have to install Clippy via rustup, with &lt;code&gt;rustup component add clippy&lt;/code&gt;. Once installed, you can run &lt;code&gt;cargo clippy&lt;/code&gt; (for more usage
instructions, see the &lt;a href=&quot;https://github.com/rust-lang/rust-clippy#usage&quot;&gt;Clippy &lt;code&gt;README&lt;/code&gt;&lt;/a&gt;). Note that Clippy is not included in
every nightly, but you can check its availability on the &lt;a href=&quot;https://rust-lang.github.io/rustup-components-history/index.html&quot;&gt;rustup components
history&lt;/a&gt; page.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a href=&quot;#where-should-i-go-if-i-have-more-questions&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;where-should-i-go-if-i-have-more-questions&quot;&gt;&lt;/a&gt;Where should I go if I have more questions?&lt;/h3&gt;
&lt;p&gt;If you need help with migrating from the plugin interface, you can contact us
via &lt;a href=&quot;https://discord.gg/vNNtpyD&quot;&gt;Discord&lt;/a&gt; or open an issue on &lt;a href=&quot;https://github.com/rust-lang/clippy/issues/new&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</content>

        <author>
            <name>Philipp Krones</name>
        </author>
    </entry>
    
    <entry>
        <title>2019-10-24 Compiler Team Triage Meeting</title>
        <link rel="alternate" href="https://blog.rust-lang.org/inside-rust/2019/10/30/compiler-team-meeting.html" type="text/html" title="2019-10-24 Compiler Team Triage Meeting" />
        <published>2019-10-30T00:00:00Z</published>
        <updated>2019-10-30T00:00:00Z</updated>
        <id>https://blog.rust-lang.org/inside-rust/2019/10/30/compiler-team-meeting.html</id>
        <content type="html" xml:base="https://blog.rust-lang.org/inside-rust/2019/10/30/compiler-team-meeting.html">&lt;p&gt;The compiler team had our weekly triage meeting on 2019-10-24.
You can find the &lt;a href=&quot;https://rust-lang.github.io/compiler-team/minutes/triage-meeting/2019-10-24/&quot;&gt;minutes&lt;/a&gt; on the &lt;a href=&quot;https://github.com/rust-lang/compiler-team&quot;&gt;compiler-team&lt;/a&gt; repository.
Each week, we have general announcements from the team followed by check-ins from two fo the compiler team working groups.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;#announcments&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;announcments&quot;&gt;&lt;/a&gt;Announcments&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Mark-Simulacrum&quot;&gt;@simulacrum&lt;/a&gt; landed the rust-std split PR which decreases the size of the rustc-dev rustup component &lt;a href=&quot;https://github.com/rust-lang/rust/pull/65474&quot;&gt;#65474&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&quot;#working-group-sync&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;working-group-sync&quot;&gt;&lt;/a&gt;Working group sync&lt;/h2&gt;
&lt;h3&gt;&lt;a href=&quot;#wg-nll&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;wg-nll&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://rust-lang.github.io/compiler-team/working-groups/nll/&quot;&gt;wg-nll&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Rust 1.40 (current nightly) will be the first stable release without the HIR borrow checker.
This means Non Lexical Lifetimes will be available on Rust 2015.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;At this point, wg-nll has completed its purpose and will be disbanded.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;wg-polonius is still going strong though!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202019-10-24.20.2354818/near/178960111&quot;&gt;Link to full discussion&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;#wg-parallel-rustc&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;wg-parallel-rustc&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://rust-lang.github.io/compiler-team/working-groups/parallel-rustc/&quot;&gt;wg-parallel-rustc&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Work is proceeding slowly but steadily.
There are regular triage meetings every Monday on the compiler calendar.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The current goal is to refactor/audit compiler locks and other parts of the parallel query system and to investigate improving performance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The current MVP is to do high-level parallelization in a few critical places such as typechecking &amp;amp; linting.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Currently, we're not seeing the speedups we want from parallelization but work is ongoing to remove locking and improve the jobserver integration.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://youtu.be/lVjW0Nw8N_g&quot;&gt;Video recording of last meeting&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/weekly.20meeting.202019-10-24.20.2354818/near/178960379&quot;&gt;Link to full discussion&lt;/a&gt;&lt;/p&gt;
</content>

        <author>
            <name>Wesley Wiser</name>
        </author>
    </entry>
    
    <entry>
        <title>2019-10-29 Infrastructure Team Meeting</title>
        <link rel="alternate" href="https://blog.rust-lang.org/inside-rust/2019/10/29/infra-team-meeting.html" type="text/html" title="2019-10-29 Infrastructure Team Meeting" />
        <published>2019-10-29T00:00:00Z</published>
        <updated>2019-10-29T00:00:00Z</updated>
        <id>https://blog.rust-lang.org/inside-rust/2019/10/29/infra-team-meeting.html</id>
        <content type="html" xml:base="https://blog.rust-lang.org/inside-rust/2019/10/29/infra-team-meeting.html">&lt;p&gt;Meeting run by Mark-Simulacrum. Minutes written by pietroalbini.&lt;br /&gt;
Attending: alexcrichton, kennytm, Mark-Simulacrum, pietroalbini, shepmaster&lt;br /&gt;
&lt;a href=&quot;https://discordapp.com/channels/442252698964721669/443148319431065610/638784152014946321&quot;&gt;Start of the conversation&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;#news-from-the-team&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;news-from-the-team&quot;&gt;&lt;/a&gt;News from the team&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A big PR moving most of the CI build environment preparation to standalone
scripts finally landed! This will allow multiple other CI improvements down
the line!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A crates.io staging environment behind CloudFront has been configured on
&lt;a href=&quot;https://staging.cratesio.com&quot;&gt;staging.cratesio.com&lt;/a&gt;, testing the
configuration before deploying it on the main domain. Please note the staging
server is on a temporary domain and will be moved in the near future.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&quot;#rolling-back-the-msys2-hack-p-high-issue)&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;rolling-back-the-msys2-hack-p-high-issue)&quot;&gt;&lt;/a&gt;Rolling back the msys2 hack (P-high issue)&lt;/h2&gt;
&lt;p&gt;Last week there was an issue in our CI caused by a broken &lt;code&gt;ca-certificates&lt;/code&gt;
msys2 package, that caused all the windows builders to fail. To patch the
problem an older version of that package was vendored and CI was configured to
download it instead of the broken one. Now that upstream fixed the issue,
pietroalbini will prepare PRs targeting both master and beta rolling back the
temporary patch.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;#what-to-do-with-mirroring-msys2mingw?&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;what-to-do-with-mirroring-msys2mingw?&quot;&gt;&lt;/a&gt;What to do with mirroring msys2/mingw?&lt;/h2&gt;
&lt;p&gt;The CI issue mentioned in the previous topic started thoughts about vendoring
msys2 and MinGW as a whole, to prevent such issues from happening in the
future. msys2 is a weird program to package as it’s more of a Linux-like
distribution on Windows, with its own package manager based on tooling borrowed
from Arch Linux.&lt;/p&gt;
&lt;p&gt;Creating the initial mirrors is not trivial but doable, but the concern is how
to keep them updated, because for example an outdated OpenSSL is really bad.
mati865 suggested that other projects often tar the whole msys2 installation
directory and periodically update that, and we’ll explore that. More discussion
on the approach will likely happen on the PR implementing the changes.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;#restricted-aws-access-for-docsrs-operators&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;restricted-aws-access-for-docsrs-operators&quot;&gt;&lt;/a&gt;Restricted AWS access for docs.rs operators&lt;/h2&gt;
&lt;p&gt;One of the issues exposed in the &lt;a href=&quot;https://blog.rust-lang.org/inside-rust/2019/10/24/docsrs-outage-postmortem.html&quot;&gt;docs.rs outage postmortem&lt;/a&gt; was that
the people in the docs.rs on-call rotation did not have access to the AWS
resources part of docs.rs. pietroalbini proposed to give them limited access,
namely to stop/start the EC2 instance and to inspect/change the underlying S3
storage bucket. Mark-Simulacrum thought the access was not needed in practice,
and we agreed to revisit the topic if issues arise again.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;#new-server-for-perf&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;new-server-for-perf&quot;&gt;&lt;/a&gt;New server for perf&lt;/h2&gt;
&lt;p&gt;To ensure consistent results the collector for &lt;a href=&quot;https://perf.rust-lang.org&quot;&gt;perf.rust-lang.org&lt;/a&gt; needs to be
on bare metal hardware, and until now it was a server lying under
alexcrichton’s desk. The server will have to be moved by December though, and
alexcrichton asked the team on feedback on what to do. There was consensus that
the best solution is to look for a rented bare metal server, and pietroalbini
will do an initial investigation.&lt;/p&gt;
</content>

        <author>
            <name>Pietro Albini</name>
        </author>
    </entry>
    
    <entry>
        <title>The Rustc Learning Working Group - An Introduction</title>
        <link rel="alternate" href="https://blog.rust-lang.org/inside-rust/2019/10/28/rustc-learning-working-group-introduction.html" type="text/html" title="The Rustc Learning Working Group - An Introduction" />
        <published>2019-10-28T00:00:00Z</published>
        <updated>2019-10-28T00:00:00Z</updated>
        <id>https://blog.rust-lang.org/inside-rust/2019/10/28/rustc-learning-working-group-introduction.html</id>
        <content type="html" xml:base="https://blog.rust-lang.org/inside-rust/2019/10/28/rustc-learning-working-group-introduction.html">&lt;p&gt;The &lt;a href=&quot;https://github.com/rust-lang/compiler-team/tree/master/content/working-groups/learning&quot;&gt;Learning Working Group&lt;/a&gt;, formed in April 2019, is focused on making the
compiler easier to learn by ensuring that &lt;a href=&quot;https://rust-lang.github.io/rustc-guide/&quot;&gt;rustc-guide&lt;/a&gt; and API docs are
&amp;quot;complete&amp;quot;. It is one of the many efforts by the Rust Compiler team to
decrease the barrier of contributing to the compiler. As noted on the WG’s
homepage —&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This working group aims to accomplish the following:&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Ensure that major components of rustc are covered in rustc-guide&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Ensure that API doc coverage is at least 90%&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Learning Group is making entry to contribute easier by improving the
compiler documentation for the new and potential contributors. We all know
this bias — the more time we’ve spent in a system, the less likely we are to
see the issues that the newcomers might face. Given that, this group
organically became an attractive place for beginners, who would benefit
from documenting the compiler internals, while learning those parts of it
at the same time. This benefits the entire compiler team by giving the
documentation a perspective from the new contributors.&lt;/p&gt;
&lt;p&gt;The Learning group, in general, is starting to document the
“Compiler lecture series”, which are a list of Youtube video lectures
given earlier by the more knowledgeable members of the compiler team.
There is also the task of improving the documentation structure of
&lt;a href=&quot;https://rust-lang.github.io/rustc-guide/&quot;&gt;rustc-guide&lt;/a&gt;. At first, each member used to pick a video lecture by
themselves and contribute via a Github pull request to the
&lt;a href=&quot;https://github.com/rust-lang/rustc-guide&quot;&gt;rustc-guide Github repository&lt;/a&gt;. This proved to be a bit difficult
for the following reasons —&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Not all members would get to watch and work on the lectures of
their choice.&lt;/li&gt;
&lt;li&gt;The knowledge would still be fragmented depending on who watched
which lecture.&lt;/li&gt;
&lt;li&gt;Some lectures are more interesting than others and this means that
some contributors would miss out on the interesting ones.&lt;/li&gt;
&lt;li&gt;Certain lectures are more difficult and require input from multiple
people.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Hence, at the moment, the group decided to work on one video at a time.
This has proven to be beneficial for the entire group, especially with
the lecture &lt;a href=&quot;https://www.youtube.com/watch?v=c01TsOsr3-c&quot;&gt;Representing types in rustc&lt;/a&gt;. At the time of this writing,
it is still a work-in-progress but the input from everyone allows people
to work together while benefiting from the questions that everyone has
about the lecture.&lt;/p&gt;
&lt;p&gt;The group is still learning about the best possible ways to organize and
manage and some compiler team veterans are always there to help out!
We are always in need of help from both existing compiler contributors
and new folks who want to contribute and learn.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;#call-for-participation&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;call-for-participation&quot;&gt;&lt;/a&gt;Call for participation&lt;/h2&gt;
&lt;p&gt;There is no bar to entry in the group. To join the group, you can
drop a message in &lt;a href=&quot;https://rust-lang.zulipchat.com/#narrow/stream/196385-t-compiler.2Fwg-learning&quot;&gt;&lt;code&gt;#t-compiler/wg-learning&lt;/code&gt; on Zulip&lt;/a&gt; introducing
yourself. We would love to hear from you and hope we all together
can make the documentation better.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;#important--resources&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;important--resources&quot;&gt;&lt;/a&gt;Important  resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/rust-lang/compiler-team/tree/master/content/working-groups/learning&quot;&gt;Learning Working Group&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://rust-lang.github.io/rustc-guide/&quot;&gt;Rustc Guide Book&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/rust-lang/rustc-guide&quot;&gt;Rustc Guide Repository&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/rust-lang/rustc-guide/projects/2&quot;&gt;Github Project (Kanban)&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/rust-lang/compiler-team/tree/master/content/working-groups/learning/minutes&quot;&gt;Learning WG Meeting Minutes&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCaYhcUwRBNscFNUKTjgPFiA/playlists&quot;&gt;Rust Youtube Videos&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://rust-lang.zulipchat.com/#narrow/stream/196385-t-compiler.2Fwg-learning&quot;&gt;Zulip Stream: &lt;code&gt;#t-compiler/wg-learning&lt;/code&gt; on Zulip&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>

        <author>
            <name>Amanjeev Sethi</name>
        </author>
    </entry>
    
    <entry>
        <title>Planning meeting update</title>
        <link rel="alternate" href="https://blog.rust-lang.org/inside-rust/2019/10/25/planning-meeting-update.html" type="text/html" title="Planning meeting update" />
        <published>2019-10-25T00:00:00Z</published>
        <updated>2019-10-25T00:00:00Z</updated>
        <id>https://blog.rust-lang.org/inside-rust/2019/10/25/planning-meeting-update.html</id>
        <content type="html" xml:base="https://blog.rust-lang.org/inside-rust/2019/10/25/planning-meeting-update.html">&lt;p&gt;In our planning meeting today, the compiler team has scheduled our
next batch of upcoming design meetings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On Nov 1, we will discuss &amp;quot;incremental dep-graph storage&amp;quot; (see
&lt;a href=&quot;https://github.com/rust-lang/compiler-team/issues/199&quot;&gt;rust-lang/compiler-team#199&lt;/a&gt;), which is a plan to improve the
performance of storing incremental compilation data, as well as
reducing peak memory usage.&lt;/li&gt;
&lt;li&gt;On Nov 8, we will discuss &amp;quot;A unified framework for dataflow
analysis&amp;quot; (see &lt;a href=&quot;https://github.com/rust-lang/compiler-team/issues/202&quot;&gt;rust-lang/compiler-team#202&lt;/a&gt;), which is a proposal
for how an improved dataflow analysis that can help with const
evaluation.&lt;/li&gt;
&lt;li&gt;On Nov 15, we will do a &amp;quot;working group review&amp;quot; (see
&lt;a href=&quot;https://github.com/rust-lang/compiler-team/issues/187&quot;&gt;rust-lang/compiler-team#187&lt;/a&gt;), examining how well the working group
system has been working and what we might do to improve it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a href=&quot;#did-you-know&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;did-you-know&quot;&gt;&lt;/a&gt;Did you know?&lt;/h3&gt;
&lt;p&gt;Most weeks, the compiler team has some sort of design meeting. These
meetings take place on Zulip and are open to all. Every 4 weeks, we do
a planning meeting to pick the next few meetings from the list of open
proposals. You can find &lt;a href=&quot;https://rust-lang.github.io/compiler-team/about/steering-meeting/&quot;&gt;more details about how the compiler-team
steering meeting process here&lt;/a&gt;.&lt;/p&gt;
</content>

        <author>
            <name>Niko Matsakis</name>
        </author>
    </entry>
    
    <entry>
        <title>Please welcome pnkfelix as compiler team co-lead!</title>
        <link rel="alternate" href="https://blog.rust-lang.org/inside-rust/2019/10/24/pnkfelix-compiler-team-co-lead.html" type="text/html" title="Please welcome pnkfelix as compiler team co-lead!" />
        <published>2019-10-24T00:00:00Z</published>
        <updated>2019-10-24T00:00:00Z</updated>
        <id>https://blog.rust-lang.org/inside-rust/2019/10/24/pnkfelix-compiler-team-co-lead.html</id>
        <content type="html" xml:base="https://blog.rust-lang.org/inside-rust/2019/10/24/pnkfelix-compiler-team-co-lead.html">&lt;p&gt;I'm happy to announce that &lt;a href=&quot;https://github.com/pnkfelix&quot;&gt;pnkfelix&lt;/a&gt; will be joining me as compiler
team co-lead. Felix was a &amp;quot;founding member&amp;quot; of the compiler team when
it first started, and was involved with Rust long before that. For the
last year or so, he's been taking over an increasingly large share of
&amp;quot;compiler team leadership&amp;quot;, including running the weekly triage
meeting and generally tending to the quality of the compiler as a
whole. So many thanks to &lt;a href=&quot;https://github.com/pnkfelix&quot;&gt;pnkfelix&lt;/a&gt; for all that he does, and
congratulations! 🎉&lt;/p&gt;
</content>

        <author>
            <name>Niko Matsakis</name>
        </author>
    </entry>
    
    <entry>
        <title>docs.rs outage postmortem</title>
        <link rel="alternate" href="https://blog.rust-lang.org/inside-rust/2019/10/24/docsrs-outage-postmortem.html" type="text/html" title="docs.rs outage postmortem" />
        <published>2019-10-24T00:00:00Z</published>
        <updated>2019-10-24T00:00:00Z</updated>
        <id>https://blog.rust-lang.org/inside-rust/2019/10/24/docsrs-outage-postmortem.html</id>
        <content type="html" xml:base="https://blog.rust-lang.org/inside-rust/2019/10/24/docsrs-outage-postmortem.html">&lt;p&gt;At 2019-10-21 01:38 UTC the docs.rs website went down because no available disk
space was left on the server hosting the application. Crate builds were failing
since 2019-10-20 00:55 UTC due to the same reason.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;#root-cause-of-the-outage&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;root-cause-of-the-outage&quot;&gt;&lt;/a&gt;Root cause of the outage&lt;/h2&gt;
&lt;p&gt;docs.rs needs to store the built documentation on the filesystem before
uploading it to the database, and it does so in the
&lt;code&gt;/opt/docs-rs-prefix/documentations&lt;/code&gt; directory. docs.rs never cleared that
directory though, so over time it started to increase its size until it caused
this outage. Code to periodically purge temporary directories was present, but
it was never configured to purge the one which caused the outage.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;#resolution&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;resolution&quot;&gt;&lt;/a&gt;Resolution&lt;/h2&gt;
&lt;p&gt;As the directory doesn’t contain any persistent data we cleared it and the web
server was restarted. Once we were confident the situation was resolved all the
crates that failed due to the outage were queued for a rebuild.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;#postmortem&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;postmortem&quot;&gt;&lt;/a&gt;Postmortem&lt;/h2&gt;
&lt;p&gt;The increased disk usage was gradual over weeks, slowly reaching 100% and
causing the outage. While monitoring systems were in place and recorded graphs
of the increase, no alert was configured so nobody noticed the problem. We need
to add alerts when disk usage reaches 90%, so the problem can be investigated
and dealt with on time.&lt;/p&gt;
&lt;p&gt;Crates started to fail to build a day earlier, and close to no builds were
successfully completed since then. We need to setup alerts when most of the
builds are failing: as we don’t have the necessary metrics at the moment to
reliably alert we'll have to add extra instrumentation as well.&lt;/p&gt;
&lt;p&gt;Our response was slower due to issues with our on-call rotation for the
service. The primary contacts don’t have the level of access required to
increase the disk space of the instance (the temporary fix that was
investigated at first but discarded after the discovery nobody awake could do
it), and the backup contacts don’t have any production access or expertise on
docs.rs.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;#timeline-of-events&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;timeline-of-events&quot;&gt;&lt;/a&gt;Timeline of events&lt;/h2&gt;
&lt;p&gt;Unless otherwise noted all events happened on 2019-10-21, and all times are in
UTC.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;2019-10-20 00:55: crate builds started failing due to the low disk space&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;01:38: alerts fired for the docs.rs website being down, &lt;a href=&quot;https://github.com/ashleygwilliams&quot;&gt;ashleygwilliams&lt;/a&gt;
(backup contact) got paged&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;01:39: &lt;a href=&quot;https://github.com/QuietMisdreavus&quot;&gt;QuietMisdreavus&lt;/a&gt; joins into the operations channel&lt;/li&gt;
&lt;li&gt;01:39: &lt;a href=&quot;https://github.com/QuietMisdreavus&quot;&gt;QuietMisdreavus&lt;/a&gt; found the reason for the outage (full root partition)&lt;/li&gt;
&lt;li&gt;01:52: &lt;a href=&quot;https://github.com/ashleygwilliams&quot;&gt;ashleygwilliams&lt;/a&gt; proposed to increase disk space, nobody with
permissions required to so was awake or available though&lt;/li&gt;
&lt;li&gt;01:56: &lt;a href=&quot;https://github.com/ashleygwilliams&quot;&gt;ashleygwilliams&lt;/a&gt; contacts &lt;a href=&quot;https://github.com/Mark-Simulacrum&quot;&gt;Mark-Simulacrum&lt;/a&gt;, who has the access
required to increase disk space&lt;/li&gt;
&lt;li&gt;01:57: &lt;a href=&quot;https://github.com/QuietMisdreavus&quot;&gt;QuietMisdreavus&lt;/a&gt; found the directory taking up all the disk space&lt;/li&gt;
&lt;li&gt;02:00: &lt;a href=&quot;https://github.com/QuietMisdreavus&quot;&gt;QuietMisdreavus&lt;/a&gt; removed the directory taking up all the disk space&lt;/li&gt;
&lt;li&gt;02:03: &lt;a href=&quot;https://github.com/QuietMisdreavus&quot;&gt;QuietMisdreavus&lt;/a&gt; restarted the web server&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;02:06: CDN propagated the changes, docs.rs back online&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;02:06: &lt;a href=&quot;https://github.com/Mark-Simulacrum&quot;&gt;Mark-Simulacrum&lt;/a&gt; joins into the operations channel&lt;/li&gt;
&lt;li&gt;08:19: &lt;a href=&quot;https://github.com/pietroalbini&quot;&gt;pietroalbini&lt;/a&gt; added builds failed during the outage back into the
queue&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;19:27: builds of the crates failed during the outage finished&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&quot;#action-items&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;action-items&quot;&gt;&lt;/a&gt;Action items&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Update the docs.rs source code to cleanup the offending directory
automatically.&lt;/li&gt;
&lt;li&gt;Add alerts when the available disk space on a server is below 10%.&lt;/li&gt;
&lt;li&gt;Add alerts when most of the builds are failing.&lt;/li&gt;
&lt;li&gt;Revisit the on-call rotation to make sure everyone on it has the
permissions to either react to the incidents or escalate.&lt;/li&gt;
&lt;/ul&gt;
</content>

        <author>
            <name>Pietro Albini</name>
        </author>
    </entry>
    
    <entry>
        <title>2019-10-22 Infrastructure Team Meeting</title>
        <link rel="alternate" href="https://blog.rust-lang.org/inside-rust/2019/10/22/infra-team-meeting.html" type="text/html" title="2019-10-22 Infrastructure Team Meeting" />
        <published>2019-10-22T00:00:00Z</published>
        <updated>2019-10-22T00:00:00Z</updated>
        <id>https://blog.rust-lang.org/inside-rust/2019/10/22/infra-team-meeting.html</id>
        <content type="html" xml:base="https://blog.rust-lang.org/inside-rust/2019/10/22/infra-team-meeting.html">&lt;p&gt;Meeting run by pietroalbini. Mintues written by pietroalbini.&lt;br /&gt;
Attending: aidanhs, alexcrichton, kennytm, Mark-Simulacrum, pietroalbini,
shepmaster&lt;br /&gt;
&lt;a href=&quot;https://discordapp.com/channels/442252698964721669/443148319431065610/636247640794857472&quot;&gt;Start of the conversation&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;#news-from-the-team&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;news-from-the-team&quot;&gt;&lt;/a&gt;News from the team&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;All the AWS resources related to the bastion are now managed with Terraform.
The documentation on &lt;a href=&quot;https://github.com/rust-lang/infra-team/blob/master/docs/hosts/bastion.md#updating-the-whitelisted-ips&quot;&gt;how to add whitelisted IPs&lt;/a&gt; has
also been updated.&lt;/li&gt;
&lt;li&gt;Crater agents are now deployed with Ansible, and the related AWS resources
are now managed with Terraform. Agents are configured to check for updates
every 5 minutes.&lt;/li&gt;
&lt;li&gt;There was an outage of docs.rs on Sunday night, the postmortem is going to be
published soon on the &amp;quot;Inside Rust&amp;quot; blog and work on the action items from it
is ongoing.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&quot;#putting-a-cdn-in-front-of-the-ci-s3-buckets-pietroalbini)&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;putting-a-cdn-in-front-of-the-ci-s3-buckets-pietroalbini)&quot;&gt;&lt;/a&gt;Putting a CDN in front of the CI S3 buckets (pietroalbini)&lt;/h2&gt;
&lt;p&gt;After an audit of our bandwidth usage for the &lt;code&gt;rust-lang-ci-sccache2&lt;/code&gt; and
&lt;code&gt;rust-lang-ci-mirrors&lt;/code&gt; S3 buckets we discovered CI is pulling respectively 8.3
TB and 1.4 TB from them each month. Egress from S3 is pricey (0.09$/GB), while
for us egress from CloudFront is way cheaper (0.04$/month, as across all of our
distributions we transfer out more than 150 TB each month). Putting CloudFront
in front of them is going to save us an estimate of 485$/month.&lt;/p&gt;
&lt;p&gt;Thankfully all the data in those buckets is immutable (mirrors are versioned
and all caches are addressed by hash), so there are not going to be any
problems due to cache invalidation. Sccache doesn’t support querying a CDN yet
but aidanhs is going to write some pointers and pietroalbini is going to do the
implementation work. The caches CDN is also going to query a new
&lt;code&gt;rust-lang-ci-caches&lt;/code&gt; bucket, to avoid the old naming scheme.&lt;/p&gt;
&lt;p&gt;pietroalbini already setup
&lt;a href=&quot;https://ci-mirrors.rust-lang.org&quot;&gt;ci-mirrors.rust-lang.org&lt;/a&gt;, and is going to
do the implementation work to both create a CDN distribution for caches and
switch the CI to query the CDN.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;#moving-infra-documentation-to-the-forge-pietroalbini)&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;moving-infra-documentation-to-the-forge-pietroalbini)&quot;&gt;&lt;/a&gt;Moving infra documentation to the forge (pietroalbini)&lt;/h2&gt;
&lt;p&gt;There is an effort in the project to centralize all the internal documentation
&lt;a href=&quot;https://forge.rust-lang.org&quot;&gt;on the forge&lt;/a&gt;. pietroalbini proposed to move all
the infra team documentation to it. Everyone agreed, as we find value in having
everything reachable in a single place. aidanhs pointed out that meeting
minutes should not be migrated on the forge.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;#next-meeting-time&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;next-meeting-time&quot;&gt;&lt;/a&gt;Next meeting time&lt;/h2&gt;
&lt;p&gt;Europe will switch DST next week, so the next meeting will be at -1 hours for
europeans and at the same time for everyone else on the team.&lt;/p&gt;
</content>

        <author>
            <name>Pietro Albini</name>
        </author>
    </entry>
    
    <entry>
        <title>Announcing the LLVM ICE-breaker group</title>
        <link rel="alternate" href="https://blog.rust-lang.org/inside-rust/2019/10/22/LLVM-ICE-breakers.html" type="text/html" title="Announcing the LLVM ICE-breaker group" />
        <published>2019-10-22T00:00:00Z</published>
        <updated>2019-10-22T00:00:00Z</updated>
        <id>https://blog.rust-lang.org/inside-rust/2019/10/22/LLVM-ICE-breakers.html</id>
        <content type="html" xml:base="https://blog.rust-lang.org/inside-rust/2019/10/22/LLVM-ICE-breakers.html">&lt;p&gt;Today I'm announcing a new experiment in the compiler team, the &lt;strong&gt;LLVM ICE-breaker group&lt;/strong&gt;. If you're familiar with LLVM and would like to contribute to rustc -- but without taking on a large commitment -- then the LLVM ICE-breaker group might well be for you!&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;#what-is-the-llvm-ice-breaker-group&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;what-is-the-llvm-ice-breaker-group&quot;&gt;&lt;/a&gt;What is the LLVM ICE-breaker group?&lt;/h3&gt;
&lt;p&gt;At its heart, the LLVM ICE-breaker group is just a list of people who would like to be notified when we come across LLVM bugs. You can add yourself to this list very easily -- just &lt;a href=&quot;https://rust-lang.github.io/rustc-guide/ice-breaker/about.html#join&quot;&gt;open a PR&lt;/a&gt;! When we come across a suitable bug, we'll write a message that &lt;code&gt;@&lt;/code&gt;-mentions every Github user on that list. If you have some time, maybe you can fix one of them, or at least offer some words of wisdom to help somebody else figure out what's going on.&lt;/p&gt;
&lt;p&gt;There are a few other things associated with the group too, however. For example, we've got a &lt;a href=&quot;https://rust-lang.github.io/rustc-guide/ice-breaker/llvm.html&quot;&gt;guide&lt;/a&gt; that offers some tips for how to fix LLVM-related bugs and may help you get started (particularly if you're not that familiar with rustc).&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;#what-kind-of-bugs-are-we-talking-about&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;what-kind-of-bugs-are-we-talking-about&quot;&gt;&lt;/a&gt;What kind of bugs are we talking about?&lt;/h3&gt;
&lt;p&gt;The goal is to identify &amp;quot;self-contained&amp;quot; bugs that are unlikely to require large-scale compiler refactorings or to get entangled in other big projects.&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;#who-should-join&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;who-should-join&quot;&gt;&lt;/a&gt;Who should join?&lt;/h3&gt;
&lt;p&gt;This group is a great fit for anyone who is familiar with LLVM and who would like to learn more about Rust or to get more involved in the Rust project. Even if you don't have time to open PRs against rustc, there are many other ways to help:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;identifying open LLVM bugs that we may be running into;&lt;/li&gt;
&lt;li&gt;reducing Rust sources to minimal reducers;&lt;/li&gt;
&lt;li&gt;reducing LLVM IR to minimal problem cases;&lt;/li&gt;
&lt;li&gt;and so forth.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(For that matter, feel free to join the group even if you're &lt;em&gt;not&lt;/em&gt; all that familiar with LLVM -- no better way to learn!)&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;#whats-with-the-name-ice-breaker-anyway?&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;whats-with-the-name-ice-breaker-anyway?&quot;&gt;&lt;/a&gt;What's with the name ICE-breaker anyway?&lt;/h3&gt;
&lt;p&gt;An &amp;quot;ICE&amp;quot; is an &amp;quot;internal compiler error&amp;quot;. It actually refers specifically to the case where the compiler panics (which tends to be an easy sort of bug to fix). In fact, very few LLVM bugs cause real ICEs, but the name was too good to pass up.&lt;/p&gt;
&lt;p&gt;But of course we also hope that these ICE-breaker groups can help people to get more acquainted with hacking on rustc; to &lt;a href=&quot;https://en.wiktionary.org/wiki/break_the_ice&quot;&gt;&amp;quot;break the ice&amp;quot;&lt;/a&gt;, if you will (ha! I kill me).&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;#will-there-be-more-ice-breaker-groups&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;will-there-be-more-ice-breaker-groups&quot;&gt;&lt;/a&gt;Will there be more ICE-breaker groups?&lt;/h3&gt;
&lt;p&gt;I certainly hope so! As I mentioned before, this is an experiment, but presuming that it works out well we fully intend to create more ICE-breaker groups.&lt;/p&gt;
&lt;h3&gt;&lt;a href=&quot;#so-how-do-i-sign-up-again&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot; id=&quot;so-how-do-i-sign-up-again&quot;&gt;&lt;/a&gt;So how do I sign up again?&lt;/h3&gt;
&lt;p&gt;Easy! Just &lt;a href=&quot;https://rust-lang.github.io/rustc-guide/ice-breaker/about.html#join&quot;&gt;open a PR&lt;/a&gt;!&lt;/p&gt;
</content>

        <author>
            <name>Niko Matsakis</name>
        </author>
    </entry>
    
</feed>
